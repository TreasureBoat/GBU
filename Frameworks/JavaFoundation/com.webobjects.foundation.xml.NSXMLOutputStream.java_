Compiled from "NSXMLOutputStream.java"
public class com.webobjects.foundation.xml.NSXMLOutputStream extends java.io.ObjectOutputStream implements com.webobjects.foundation.xml.NSXMLObjectStreamConstants,com.webobjects.foundation.xml.NSXMLObjectOutput {
  static final java.lang.String BASE64_TYPE;
  static final java.lang.String BASE64_ENCODING;
  org.w3c.dom.DOMImplementation _dom;
  org.w3c.dom.Document _doc;
  static org.w3c.dom.Element createTextElement(org.w3c.dom.Document, java.lang.String, java.lang.String);
  org.w3c.dom.Element writeInternalObject(java.lang.Object, java.lang.String) throws java.io.IOException;
  void setFieldType(org.w3c.dom.Element, java.lang.String);
  org.w3c.dom.Element curParent();
  protected void writeStreamHeader() throws java.io.IOException;
  protected void writeObjectOverride(java.lang.Object) throws java.io.IOException;
  public com.webobjects.foundation.xml.NSXMLOutputStream(java.io.OutputStream, java.io.File) throws java.io.IOException;
  public com.webobjects.foundation.xml.NSXMLOutputStream(java.io.OutputStream, org.xml.sax.InputSource) throws java.io.IOException;
  public com.webobjects.foundation.xml.NSXMLOutputStream(java.io.OutputStream, javax.xml.transform.Transformer) throws java.io.IOException;
  public com.webobjects.foundation.xml.NSXMLOutputStream(java.io.OutputStream) throws java.io.IOException;
  public void setXSLTSource(java.io.File) throws java.io.IOException;
  public void setXSLTSource(org.xml.sax.InputSource) throws java.io.IOException;
  public void setTransformer(javax.xml.transform.Transformer);
  public javax.xml.transform.Transformer transformer();
  public com.webobjects.foundation.xml.NSXMLOutputFormat outputFormat();
  public void setOutputFormat(com.webobjects.foundation.xml.NSXMLOutputFormat);
  public void defaultWriteObject() throws java.io.IOException;
  public java.io.ObjectOutputStream$PutField putFields() throws java.io.IOException;
  public void writeFields() throws java.io.IOException;
  public void write(int) throws java.io.IOException;
  public void write(byte[]) throws java.io.IOException;
  public void write(byte[], int, int) throws java.io.IOException;
  public void writeBoolean(boolean) throws java.io.IOException;
  public void writeByte(int) throws java.io.IOException;
  public void writeShort(int) throws java.io.IOException;
  public void writeChar(int) throws java.io.IOException;
  public void writeInt(int) throws java.io.IOException;
  public void writeLong(long) throws java.io.IOException;
  public void writeFloat(float) throws java.io.IOException;
  public void writeDouble(double) throws java.io.IOException;
  public void writeBytes(java.lang.String) throws java.io.IOException;
  public void writeChars(java.lang.String) throws java.io.IOException;
  public void writeUTF(java.lang.String) throws java.io.IOException;
  public void reset() throws java.io.IOException;
  public void flush() throws java.io.IOException;
  public void close() throws java.io.IOException;
  public void write(int, java.lang.String);
  public void write(byte[], java.lang.String) throws java.io.IOException;
  public void write(byte[], int, int, java.lang.String) throws java.io.IOException;
  public void writeBoolean(boolean, java.lang.String);
  public void writeByte(int, java.lang.String);
  public void writeShort(int, java.lang.String);
  public void writeChar(int, java.lang.String);
  public void writeInt(int, java.lang.String);
  public void writeLong(long, java.lang.String);
  public void writeFloat(float, java.lang.String);
  public void writeDouble(double, java.lang.String);
  public void writeObject(java.lang.Object, java.lang.String) throws java.io.IOException;
  public void writeBytes(java.lang.String, java.lang.String) throws java.io.IOException;
  public void writeChars(java.lang.String, java.lang.String) throws java.io.IOException;
  public void writeUTF(java.lang.String, java.lang.String);
  public void writeComment(java.lang.String);
  public void writeRootComment(java.lang.String, boolean);
  public final boolean setUseBase64ForBinaryData(boolean);
  public final boolean useBase64ForBinaryData();
  public boolean enableReferenceForString();
  public boolean disableReferenceForString();
  public int disableReferenceForString(int);
  public boolean useReferenceForString();
  static {};
}
