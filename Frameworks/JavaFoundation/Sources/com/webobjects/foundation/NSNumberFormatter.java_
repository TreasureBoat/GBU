Compiled from "NSNumberFormatter.java"
public class com.webobjects.foundation.NSNumberFormatter extends java.text.Format {
  public static final java.lang.Class _CLASS;
  public static final int RoundDown;
  public static final int RoundUp;
  public static final int RoundPlain;
  public static final int RoundBankers;
  public static final java.lang.String DefaultPattern;
  public static final java.lang.String _DecimalPattern;
  public static final java.lang.String _IntegerPattern;
  public static final java.lang.String _CurrencyPattern;
  static final long serialVersionUID;
  private static final java.lang.String SerializationPatternFieldKey;
  private static final java.lang.String SerializationStringForZeroFieldKey;
  private static final java.lang.String SerializationStringForNullFieldKey;
  private static final java.lang.String SerializationStringForNANFieldKey;
  private static final java.lang.String SerializationMaximumFieldKey;
  private static final java.lang.String SerializationMinimumFieldKey;
  private static final java.lang.String SerializationRoundingBehaviorFieldKey;
  private static final java.lang.String SerializationDecimalSeparatorFieldKey;
  private static final java.lang.String SerializationThousandsMarkFieldKey;
  private static final java.lang.String SerializationHasThousandsMarkFieldKey;
  private static final java.lang.String SerializationAllowsFloatingPointFieldKey;
  private static final java.lang.String SerializationLocaleFieldKey;
  private static final java.lang.String SerializationLocalizedPatternFieldKey;
  private static final java.lang.String SerializationCurrencyMarkFieldKey;
  public static final java.math.BigDecimal NSDecimalNotANumber;
  private static final char PATTERN_SEPARATOR;
  private static final java.lang.String PART_OF_NUMBER;
  private static final java.lang.String STRING_FOR_ZERO;
  private static final java.lang.String STRING_FOR_NULL;
  private static final java.lang.String STRING_FOR_NOTANUMBER;
  private static final java.lang.String STRING_FOR_CURRENCY;
  private static final int NSDecimalNoScale;
  private static final char DefaultDecimalSeparator;
  private static final char DefaultThousandSeparator;
  private static final java.lang.String DefaultDecimalSeparatorString;
  private static final java.lang.String DefaultThousandSeparatorString;
  private static volatile java.util.Locale globalDefaultLocale;
  private static volatile boolean globalDefaultLocalizesFormat;
  private volatile java.lang.String _negativePattern;
  private volatile java.lang.String _positivePattern;
  private volatile java.lang.String _stringForZero;
  private volatile java.lang.String _stringForNull;
  private volatile java.lang.String _stringForNotANumber;
  private volatile java.math.BigDecimal _minimum;
  private volatile java.math.BigDecimal _maximum;
  private volatile int _roundingBehavior;
  private volatile char _decimalSeparator;
  private volatile char _thousandSeparator;
  private volatile boolean _hasThousandSeparator;
  private volatile boolean _allowsFloats;
  private volatile transient java.lang.String _legalChars;
  private volatile transient java.lang.String _semanticChars;
  private volatile transient java.lang.String _negativeChars;
  private volatile java.util.Locale _currentLocale;
  private volatile boolean _localizesFormat;
  private volatile java.lang.String _currencyString;
  private volatile com.webobjects.foundation.NSNumberFormatter$ConstructionBuffer _negative;
  private volatile com.webobjects.foundation.NSNumberFormatter$ConstructionBuffer _positive;
  private static final java.lang.String _IgnoredCharsInPatterns;
  private static final java.lang.Class _stringClass;
  private static final java.lang.Class _bigDecimalClass;
  private static final java.lang.Class _LocaleClass;
  private static final java.io.ObjectStreamField[] serialPersistentFields;
  public com.webobjects.foundation.NSNumberFormatter();
  public com.webobjects.foundation.NSNumberFormatter(java.lang.String);
  private void initializeDefaults();
  public java.lang.String decimalSeparator();
  private char _decimalSeparator();
  public void setDecimalSeparator(java.lang.String);
  private void setDecimalSeparator(char);
  public java.lang.String thousandSeparator();
  private char _thousandSeparator();
  public void setThousandSeparator(java.lang.String);
  private void setThousandSeparator(char);
  public int roundingBehavior();
  public void setRoundingBehavior(int);
  public java.lang.String stringForZero();
  public void setStringForZero(java.lang.String);
  private void _setStringForZero(java.lang.String);
  public java.lang.String stringForNull();
  public void setStringForNull(java.lang.String);
  public java.lang.String stringForNotANumber();
  public void setStringForNotANumber(java.lang.String);
  public java.lang.String attributedStringForZero();
  public void setAttributedStringForZero(java.lang.String);
  public java.lang.String attributedStringForNil();
  public void setAttributedStringForNil(java.lang.String);
  public java.lang.String attributedStringForNotANumber();
  public void setAttributedStringForNotANumber(java.lang.String);
  public boolean hasThousandSeparators();
  public void setHasThousandSeparators(boolean);
  public boolean allowsFloats();
  public void setAllowsFloats(boolean);
  public java.math.BigDecimal minimum();
  public void setMinimum(java.math.BigDecimal);
  public java.math.BigDecimal maximum();
  public void setMaximum(java.math.BigDecimal);
  public java.lang.String negativePattern();
  public void setNegativePattern(java.lang.String);
  public java.lang.String positivePattern();
  public void setPositivePattern(java.lang.String);
  public java.lang.String pattern();
  public void setPattern(java.lang.String);
  public java.lang.String negativeFormat();
  public void setNegativeFormat(java.lang.String);
  public java.lang.String positiveFormat();
  public void setPositiveFormat(java.lang.String);
  public java.lang.String format();
  public void setFormat(java.lang.String);
  public boolean localizesFormat();
  public void setLocalizesFormat(boolean);
  public java.lang.String stringForObjectValue(java.lang.Object) throws java.lang.IllegalArgumentException;
  public java.lang.Object objectValueForString(java.lang.String) throws java.text.ParseException;
  private java.lang.String _legalNegativeChars();
  private void appendUniquePatternChars(java.lang.StringBuffer, java.lang.String);
  private void _updateCharSets();
  private void validatePattern(java.lang.String);
  private java.lang.String _numberStringForValueObject(java.math.BigDecimal, com.webobjects.foundation.NSNumberFormatter$ConstructionBuffer, boolean);
  private int _surroundValueInString(char[], int, com.webobjects.foundation.NSNumberFormatter$ConstructionBuffer);
  private void _addThousandSeparators(java.lang.StringBuffer, com.webobjects.foundation.NSNumberFormatter$ConstructionBuffer);
  private java.lang.String _addThousandSeparatorsToPattern(java.lang.StringBuffer, com.webobjects.foundation.NSNumberFormatter$ConstructionBuffer);
  private int _findFirstPartOfNumber(java.lang.String);
  private boolean _containsValidNumberParts(java.lang.String);
  private java.lang.String _deleteAllPartsOfNumbers(java.lang.String);
  private java.lang.String _stringWithSeparator(java.lang.String, char, int);
  public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition);
  public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);
  public java.lang.Object parseObject(java.lang.String) throws java.text.ParseException;
  public static java.util.Locale[] availableLocales();
  public static java.util.Locale defaultLocale();
  public static void setDefaultLocale(java.util.Locale);
  public java.util.Locale locale();
  public void setLocale(java.util.Locale);
  public static boolean defaultLocalizesPattern();
  public static void setDefaultLocalizesPattern(boolean);
  public boolean localizesPattern();
  public void setLocalizesPattern(boolean);
  public java.lang.String currencySymbol();
  public void setCurrencySymbol(java.lang.String);
  private void _setCurrencyMark(java.lang.String);
  private void _updateLocalizedPatterns();
  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  static {};
}
