Compiled from "_NSTransformHandler.java"
final class com.webobjects.foundation.xml._NSTransformHandler implements org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,com.webobjects.foundation.xml.NSXMLObjectStreamConstants {
  private java.io.OutputStream _transformedData;
  private com.webobjects.foundation.xml._NSTagTransformer _curTagTxr;
  private static java.util.HashMap<java.lang.String, com.webobjects.foundation.xml._NSTagTransformer> tag2Handler;
  private java.lang.StringBuffer _curChars;
  com.webobjects.foundation.xml._NSTransformHandler$BlockDataOutputStream _bdos;
  public void write(byte[]) throws java.io.IOException;
  public void write(byte) throws java.io.IOException;
  public static void write(byte, java.io.OutputStream) throws java.io.IOException;
  public void write(short) throws java.io.IOException;
  public static void write(short, java.io.OutputStream) throws java.io.IOException;
  public void write(char) throws java.io.IOException;
  public static void write(char, java.io.OutputStream) throws java.io.IOException;
  public void write(int) throws java.io.IOException;
  public static void write(int, java.io.OutputStream) throws java.io.IOException;
  public void write(long) throws java.io.IOException;
  public static void write(long, java.io.OutputStream) throws java.io.IOException;
  public void write(float) throws java.io.IOException;
  public static void write(float, java.io.OutputStream) throws java.io.IOException;
  public void write(double) throws java.io.IOException;
  public static void write(double, java.io.OutputStream) throws java.io.IOException;
  public void write(java.lang.String) throws java.io.IOException;
  public static void write(java.lang.String, java.io.OutputStream) throws java.io.IOException;
  public void writeReference(java.lang.String) throws java.io.IOException;
  public static void writeReference(java.lang.String, java.io.OutputStream) throws java.io.IOException;
  public com.webobjects.foundation.xml._NSTransformHandler() throws java.io.IOException;
  public java.io.OutputStream transformedData();
  public java.lang.String previousPartOfString();
  public void setDocumentLocator(org.xml.sax.Locator);
  public void startDocument() throws org.xml.sax.SAXException;
  public void endDocument() throws org.xml.sax.SAXException;
  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void characters(char[], int, int) throws org.xml.sax.SAXException;
  public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException;
  public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;
  public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endDTD() throws org.xml.sax.SAXException;
  public void startEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void endEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void startCDATA() throws org.xml.sax.SAXException;
  public void endCDATA() throws org.xml.sax.SAXException;
  public void comment(char[], int, int) throws org.xml.sax.SAXException;
}
