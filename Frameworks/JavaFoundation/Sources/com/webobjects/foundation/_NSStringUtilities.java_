Compiled from "_NSStringUtilities.java"
public final class com.webobjects.foundation._NSStringUtilities {
  public static final java.lang.String UTF8_ENCODING;
  public static final java.lang.String UTF16_ENCODING;
  public static final java.lang.String ASCII_ENCODING;
  public static final java.lang.String ISOLATIN1_ENCODING;
  private static final java.lang.String WO_DEFAULT_ENCODING;
  private static java.lang.String _encoding;
  private static final int _MatchState;
  private static final int _MatchStarState;
  private static final int Finished;
  public com.webobjects.foundation._NSStringUtilities();
  public static void setDefaultEncoding(java.lang.String) throws java.io.UnsupportedEncodingException;
  public static java.lang.String defaultEncoding();
  public static int integerFromPlist(com.webobjects.foundation.NSDictionary, java.lang.String, int);
  public static java.lang.String stringFromBuffer(java.lang.StringBuffer);
  public static java.lang.String stringFromBuffer(java.lang.StringBuilder);
  public static final java.lang.String stringForBytes(byte[], int, int, java.lang.String);
  public static final byte[] bytesForString(java.lang.String, java.lang.String);
  public static final java.lang.String stringForBytes(byte[], java.lang.String);
  public static final java.lang.String stringForBytes(byte[]);
  public static final byte[] bytesForString(java.lang.String);
  public static final java.lang.String asciiStringForBytes(byte[]);
  public static final byte[] bytesForAsciiString(java.lang.String);
  public static final java.lang.String isolatinStringForBytes(byte[]);
  public static final byte[] bytesForIsolatinString(java.lang.String);
  public static final java.lang.String dotifyPath(java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static final java.lang.String concat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public static java.lang.String stringMarkingUpcaseTransitionsWithDelimiter(java.lang.String, java.lang.String);
  public static java.lang.String stringRepeatedTimes(java.lang.String, int);
  public static java.lang.String quotedStringWithQuote(java.lang.String, char);
  public static java.lang.String capitalizedStringAsWord(java.lang.String);
  public static java.lang.String capitalizedString(java.lang.String);
  public static java.lang.String capitalizedStringWithPrefix(java.lang.String, java.lang.String);
  public static java.lang.String deleteAllInstancesOfString(java.lang.String, java.lang.String);
  public static java.lang.String replaceAllInstancesOfString(java.lang.String, java.lang.String, java.lang.String);
  public static boolean isNumber(java.lang.String);
  public static java.lang.String lastComponentInString(java.lang.String, char);
  public static java.lang.String lastComponentInString(java.lang.String, char, java.lang.String);
  public static java.lang.String stringByDeletingLastComponent(java.lang.String, char);
  public static boolean containsOnlyWhiteSpace(java.lang.String);
  public static void appendToFile(java.io.File, java.lang.String);
  public static void writeToFile(java.io.File, java.lang.String);
  public static java.lang.String stringFromFile(java.lang.String);
  public static java.lang.String stringFromFile(java.lang.String, java.lang.String);
  public static java.lang.String stringFromFile(java.io.File);
  public static java.lang.String stringFromFile(java.io.File, java.lang.String);
  public static byte[] bytesFromInputStream(java.io.InputStream);
  public static java.lang.String stringFromInputStream(java.io.InputStream);
  public static java.lang.String stringFromInputStream(java.io.InputStream, java.lang.String);
  public static java.lang.String stringFromReader(java.io.Reader);
  public static java.lang.String stringFromPathURL(java.net.URL);
  public static java.lang.String stringFromPathURL(java.net.URL, java.lang.String);
  public static java.lang.String stringWithReplacements(java.lang.String, com.webobjects.foundation.NSDictionary<?, java.lang.String>);
  public static java.lang.String replaceNSStringSlot(java.lang.String, com.webobjects.foundation.NSArray);
  private static boolean _isMagicCharacter(char);
  private static boolean _stringMatchesCharacter(java.lang.String, char);
  private static java.lang.String _bracketedStringFromPatternAnalyzer(com.webobjects.foundation._NSStringUtilities$_PatternAnalyzer);
  public static boolean stringMatchesPattern(java.lang.String, java.lang.String, boolean);
  static {};
}
