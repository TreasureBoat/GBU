Compiled from "NSArray.java"
public class com.webobjects.foundation.NSArray<E> implements java.lang.Cloneable, java.io.Serializable, com.webobjects.foundation.NSCoding, com.webobjects.foundation.NSKeyValueCoding, com.webobjects.foundation.NSKeyValueCodingAdditions, com.webobjects.foundation._NSFoundationCollection, java.util.List<E> {
  public static final java.lang.Class _CLASS;
  public static final int NotFound;
  public static final com.webobjects.foundation.NSArray EmptyArray;
  private static final char _OperatorIndicatorChar;
  public static final java.lang.String CountOperatorName;
  public static final java.lang.String MaximumOperatorName;
  public static final java.lang.String MinimumOperatorName;
  public static final java.lang.String SumOperatorName;
  public static final java.lang.String AverageOperatorName;
  static final long serialVersionUID;
  private static final java.lang.String SerializationValuesFieldKey;
  private static com.webobjects.foundation.NSMutableDictionary<java.lang.String, com.webobjects.foundation.NSArray$Operator> _operators;
  protected static int _NSArrayClassHashCode;
  protected transient int _capacity;
  protected transient int _count;
  protected E[] _objects;
  protected transient E[] _objectsCache;
  protected transient int _hashCache;
  private transient boolean _recomputeHashCode;
  public static final boolean CheckForNull;
  public static final boolean IgnoreNull;
  private static final java.io.ObjectStreamField[] serialPersistentFields;
  public static com.webobjects.foundation.NSArray<java.lang.String> operatorNames();
  public static void setOperatorForKey(java.lang.String, com.webobjects.foundation.NSArray$Operator);
  public static com.webobjects.foundation.NSArray$Operator operatorForKey(java.lang.String);
  public static void removeOperatorForKey(java.lang.String);
  protected void _initializeWithCapacity(int);
  protected void _ensureCapacity(int);
  public com.webobjects.foundation.NSArray();
  public com.webobjects.foundation.NSArray(E);
  private void initFromObjects(java.lang.Object[], int, int, boolean, boolean);
  protected com.webobjects.foundation.NSArray(java.lang.Object[], int, int, boolean, boolean);
  public com.webobjects.foundation.NSArray(E[]);
  public com.webobjects.foundation.NSArray(E[], com.webobjects.foundation.NSRange);
  public com.webobjects.foundation.NSArray(com.webobjects.foundation.NSArray<? extends E>);
  public com.webobjects.foundation.NSArray(java.util.Collection<? extends E>, boolean);
  public com.webobjects.foundation.NSArray(java.util.Collection<? extends E>);
  public com.webobjects.foundation.NSArray(java.util.List<? extends E>, com.webobjects.foundation.NSRange, boolean);
  protected E[] objectsNoCopy();
  public int count();
  public E objectAtIndex(int);
  public com.webobjects.foundation.NSArray<E> arrayByAddingObject(E);
  public com.webobjects.foundation.NSArray<E> arrayByAddingObjectsFromArray(com.webobjects.foundation.NSArray<? extends E>);
  public E[] objects();
  public java.lang.Object[] objects(com.webobjects.foundation.NSRange);
  public java.util.Vector<E> vector();
  public java.util.ArrayList<E> arrayList();
  public boolean containsObject(java.lang.Object);
  public java.lang.Object firstObjectCommonWithArray(com.webobjects.foundation.NSArray);
  public void getObjects(java.lang.Object[]);
  public void getObjects(java.lang.Object[], com.webobjects.foundation.NSRange);
  private final int _findObjectInArray(int, int, java.lang.Object, boolean);
  public int indexOfObject(java.lang.Object);
  public int indexOfObject(java.lang.Object, com.webobjects.foundation.NSRange);
  public int indexOfIdenticalObject(java.lang.Object);
  public int indexOfIdenticalObject(java.lang.Object, com.webobjects.foundation.NSRange);
  public com.webobjects.foundation.NSArray<E> subarrayWithRange(com.webobjects.foundation.NSRange);
  public E lastObject();
  private boolean _equalsArray(java.util.List);
  public boolean isEqualToArray(com.webobjects.foundation.NSArray);
  public boolean equals(java.lang.Object);
  public java.util.Enumeration<E> objectEnumerator();
  public java.util.Enumeration<E> reverseObjectEnumerator();
  public com.webobjects.foundation.NSArray sortedArrayUsingSelector(com.webobjects.foundation.NSSelector) throws com.webobjects.foundation.NSComparator$ComparisonException;
  public com.webobjects.foundation.NSArray<E> sortedArrayUsingComparator(com.webobjects.foundation.NSComparator) throws com.webobjects.foundation.NSComparator$ComparisonException;
  public java.lang.String componentsJoinedByString(java.lang.String);
  public static com.webobjects.foundation.NSArray<java.lang.String> componentsSeparatedByString(java.lang.String, java.lang.String);
  public static com.webobjects.foundation.NSMutableArray<java.lang.String> _mutableComponentsSeparatedByString(java.lang.String, java.lang.String);
  private java.lang.Object _valueForKeyPathWithOperator(java.lang.String);
  public java.lang.Object valueForKey(java.lang.String);
  public void takeValueForKey(java.lang.Object, java.lang.String);
  public java.lang.Object valueForKeyPath(java.lang.String);
  public void takeValueForKeyPath(java.lang.Object, java.lang.String);
  public java.lang.Class classForCoder();
  public static java.lang.Object decodeObject(com.webobjects.foundation.NSCoder);
  public void encodeWithCoder(com.webobjects.foundation.NSCoder);
  public void makeObjectsPerformSelector(com.webobjects.foundation.NSSelector, java.lang.Object[]);
  public int _shallowHashCode();
  public int hashCode();
  public java.lang.Object clone();
  public com.webobjects.foundation.NSArray<E> immutableClone();
  public com.webobjects.foundation.NSMutableArray<E> mutableClone();
  public java.lang.String toString();
  protected boolean _mustRecomputeHash();
  protected void _setMustRecomputeHash(boolean);
  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  private java.lang.Object readResolve() throws java.io.ObjectStreamException;
  public static final <T> com.webobjects.foundation.NSArray<T> emptyArray();
  public void add(int, E);
  public boolean add(E);
  public boolean addAll(java.util.Collection<? extends E>);
  public boolean addAll(int, java.util.Collection<? extends E>);
  public boolean contains(java.lang.Object);
  public java.util.Iterator<E> iterator();
  public java.lang.Object[] toArray();
  public <T> T[] toArray(T[]);
  public boolean containsAll(java.util.Collection);
  public java.util.ListIterator<E> listIterator();
  public java.util.ListIterator<E> listIterator(int);
  public E get(int);
  public E set(int, E);
  public int indexOf(java.lang.Object);
  public int lastIndexOf(java.lang.Object);
  public boolean isEmpty();
  public int size();
  public E remove(int);
  public boolean remove(java.lang.Object);
  public void clear();
  public boolean retainAll(java.util.Collection<?>);
  public boolean removeAll(java.util.Collection<?>);
  public java.util.List<E> subList(int, int);
  static {};
}
