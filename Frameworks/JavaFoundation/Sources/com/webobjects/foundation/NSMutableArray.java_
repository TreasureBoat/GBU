Compiled from "NSMutableArray.java"
public class com.webobjects.foundation.NSMutableArray<E> extends com.webobjects.foundation.NSArray<E> {
  public static final java.lang.Class _CLASS;
  static final long serialVersionUID;
  public com.webobjects.foundation.NSMutableArray();
  public com.webobjects.foundation.NSMutableArray(int);
  public com.webobjects.foundation.NSMutableArray(E);
  public com.webobjects.foundation.NSMutableArray(E[]);
  public com.webobjects.foundation.NSMutableArray(E[], com.webobjects.foundation.NSRange);
  public com.webobjects.foundation.NSMutableArray(com.webobjects.foundation.NSArray<? extends E>);
  public com.webobjects.foundation.NSMutableArray(java.util.List<? extends E>, com.webobjects.foundation.NSRange, boolean);
  public com.webobjects.foundation.NSMutableArray(java.util.Collection<? extends E>);
  protected com.webobjects.foundation.NSMutableArray(java.lang.Object[], int, int, boolean, boolean);
  public void setArray(com.webobjects.foundation.NSArray);
  public void addObject(java.lang.Object);
  public void addObjects(java.lang.Object[]);
  public java.lang.Object replaceObjectAtIndex(E, int);
  public void replaceObjectAtIndex(int, E);
  public void insertObjectAtIndex(E, int);
  public E removeObjectAtIndex(int);
  public void removeAllObjects();
  public void sortUsingComparator(com.webobjects.foundation.NSComparator) throws com.webobjects.foundation.NSComparator$ComparisonException;
  public void addObjectsFromArray(com.webobjects.foundation.NSArray<? extends E>);
  public void replaceObjectsInRange(com.webobjects.foundation.NSRange, com.webobjects.foundation.NSArray<E>, com.webobjects.foundation.NSRange);
  public java.lang.Object removeLastObject();
  private boolean _removeObject(java.lang.Object, int, int, boolean);
  public boolean removeObject(java.lang.Object);
  public boolean removeObject(java.lang.Object, com.webobjects.foundation.NSRange);
  public boolean removeIdenticalObject(java.lang.Object);
  public boolean removeIdenticalObject(java.lang.Object, com.webobjects.foundation.NSRange);
  public void removeObjects(java.lang.Object[]);
  public void removeObjectsInArray(com.webobjects.foundation.NSArray);
  public void removeObjectsInRange(com.webobjects.foundation.NSRange);
  protected void removeRange(int, int);
  public java.lang.Object clone();
  public com.webobjects.foundation.NSArray<E> immutableClone();
  public com.webobjects.foundation.NSMutableArray<E> mutableClone();
  public void _moveObjectAtIndexToIndex(int, int);
  public E remove(int);
  public boolean remove(java.lang.Object);
  public void clear();
  public boolean retainAll(java.util.Collection<?>);
  public boolean removeAll(java.util.Collection<?>);
  public void add(int, E);
  public boolean add(E);
  public boolean addAll(java.util.Collection<? extends E>);
  public boolean addAll(int, java.util.Collection<? extends E>);
  public E set(int, E);
  public java.util.List<E> subList(int, int);
  public java.util.ListIterator<E> listIterator(int);
  public java.util.ListIterator<E> listIterator();
  static {};
}
