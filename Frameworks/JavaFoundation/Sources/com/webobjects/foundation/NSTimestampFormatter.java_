Compiled from "NSTimestampFormatter.java"
public class com.webobjects.foundation.NSTimestampFormatter extends java.text.Format implements java.io.Serializable {
  public static final java.lang.Class _CLASS;
  private static final int __NOT_FOUND;
  private static final java.lang.String[] _patterns;
  private static final char _QuoteCharacter;
  private static final char _SpecifierCharacter;
  private static final char[] _specifiers;
  private static final java.lang.String DefaultPattern;
  private static final java.lang.String __usPatternChars;
  private static final java.lang.String[][] _defaultZoneStrings;
  private static final java.text.DateFormatSymbols _defaultDateFormatSymbols;
  private static final com.webobjects.foundation.NSTimestampFormatter _defaultTimestampFormatter;
  static final long serialVersionUID;
  private static final java.lang.String SerializationPatternFieldKey;
  private static final java.lang.String SerializationFormatSymbolsFieldKey;
  private static final java.lang.String SerializationFormatTimeZoneFieldKey;
  private static final java.lang.String SerializationParseTimeZoneFieldKey;
  static boolean _JVM131Compatible;
  private static java.util.Locale _defaultLocaleForDatePattern;
  private static java.util.Locale _defaultLocaleForTimePattern;
  private static java.lang.String _localizedDatePattern;
  private static java.lang.String _localizedTimePattern;
  private static final com.webobjects.foundation.NSNumberFormatter __minuteFormatter;
  static com.webobjects.foundation._NSThreadsafeMutableDictionary<java.lang.String, com.webobjects.foundation.NSTimeZone> _knownTZNameMappings;
  private java.text.DateFormatSymbols _dateFormatSymbols;
  private com.webobjects.foundation.NSTimeZone _formatTimeZone;
  private com.webobjects.foundation.NSTimeZone _parseTimeZone;
  private java.lang.String _pattern;
  private com.webobjects.foundation.NSTimestampFormatter$__NSSimpleDateFormat _formatDateFormat;
  private com.webobjects.foundation.NSTimestampFormatter$__NSSimpleDateFormat _parseDateFormat;
  private static final java.io.ObjectStreamField[] serialPersistentFields;
  private static java.text.DateFormatSymbols _getDefaultDateFormatSymbols();
  public static java.lang.String[][] _getDefaultZoneStrings();
  private static java.lang.String _localizedDatePattern();
  private static java.lang.String _localizedTimePattern();
  private static synchronized java.lang.String _localizedDateTimePattern();
  private static synchronized java.lang.String _patternForSpecifierString(java.lang.String);
  public com.webobjects.foundation.NSTimestampFormatter();
  public com.webobjects.foundation.NSTimestampFormatter(java.lang.String);
  public com.webobjects.foundation.NSTimestampFormatter(java.lang.String, java.text.DateFormatSymbols);
  public java.text.DateFormatSymbols defaultDateFormatSymbols();
  private java.text.DateFormatSymbols _defaultDateFormatSymbols();
  private java.lang.String[][] _defaultZoneStrings();
  private com.webobjects.foundation.NSTimestampFormatter$__NSSimpleDateFormat _parseDateFormat();
  private com.webobjects.foundation.NSTimestampFormatter$__NSSimpleDateFormat _formatDateFormat();
  private synchronized com.webobjects.foundation.NSTimestampFormatter$__NSSimpleDateFormat _getSimpleDateFormat();
  public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition);
  public java.lang.Object parseObjectInUTC(java.lang.String, java.text.ParsePosition);
  public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);
  public com.webobjects.foundation.NSTimeZone defaultFormatTimeZone();
  public synchronized com.webobjects.foundation.NSTimeZone defaultParseTimeZone();
  public synchronized void setDefaultFormatTimeZone(com.webobjects.foundation.NSTimeZone);
  public synchronized void setDefaultParseTimeZone(com.webobjects.foundation.NSTimeZone);
  public synchronized void setPattern(java.lang.String);
  public java.lang.String pattern();
  public java.lang.String toString();
  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  static {};
}
