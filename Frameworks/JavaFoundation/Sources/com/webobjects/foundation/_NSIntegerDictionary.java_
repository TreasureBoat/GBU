Compiled from "_NSIntegerDictionary.java"
public class com.webobjects.foundation._NSIntegerDictionary<K> implements java.lang.Cloneable, java.io.Serializable, com.webobjects.foundation._NSFoundationCollection {
  public static final java.lang.Class _CLASS;
  public static final int NotAvailable;
  static final long serialVersionUID;
  private static final java.lang.String SerializationKeysFieldKey;
  private static final java.lang.String SerializationValuesFieldKey;
  protected transient int _capacity;
  protected transient int _hashtableBuckets;
  protected transient int _count;
  protected int[] _values;
  protected transient int[] _valuesCache;
  protected transient byte[] _flags;
  protected K[] _keys;
  protected transient K[] _keysCache;
  protected transient int _hashCache;
  protected static int _NSDictionaryClassHashCode;
  private static final java.io.ObjectStreamField[] serialPersistentFields;
  protected void _initializeDictionary();
  protected void _ensureCapacity(int);
  public com.webobjects.foundation._NSIntegerDictionary();
  public com.webobjects.foundation._NSIntegerDictionary(int, K);
  private void initFromIntegers(int[], K[], boolean);
  private com.webobjects.foundation._NSIntegerDictionary(int[], K[], boolean);
  public com.webobjects.foundation._NSIntegerDictionary(int[], K[]);
  public com.webobjects.foundation._NSIntegerDictionary(com.webobjects.foundation._NSIntegerDictionary<K>);
  protected K[] keysNoCopy();
  protected int[] integersNoCopy();
  public int count();
  public int integerForKey(java.lang.Object);
  public com.webobjects.foundation.NSArray<K> allKeys();
  public int[] allIntegers();
  public java.util.Enumeration<K> keyEnumerator();
  public com.webobjects.foundation.NSArray<K> allKeysForInteger(int);
  public int[] integersForKeys(com.webobjects.foundation.NSArray);
  private boolean _equalsIntegerDictionary(com.webobjects.foundation._NSIntegerDictionary);
  public boolean isEqualToIntegerDictionary(com.webobjects.foundation._NSIntegerDictionary);
  public boolean equals(java.lang.Object);
  public int _shallowHashCode();
  public int hashCode();
  public java.lang.Object clone();
  public java.lang.String toString();
  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  static {};
}
