Compiled from "NSData.java"
public class com.webobjects.foundation.NSData implements java.lang.Cloneable,java.io.Serializable,com.webobjects.foundation.NSCoding {
  public static final java.lang.Class _CLASS;
  public static final com.webobjects.foundation.NSData EmptyData;
  static final long serialVersionUID;
  private static final java.lang.String SerializationBytesFieldKey;
  protected byte[] _bytes;
  protected transient com.webobjects.foundation.NSRange _range;
  protected transient int _hashCache;
  private transient boolean _recomputeHashCode;
  private static final char[] _nibbleToHex;
  private static final java.io.ObjectStreamField[] serialPersistentFields;
  public com.webobjects.foundation.NSData();
  public com.webobjects.foundation.NSData(byte[]);
  public com.webobjects.foundation.NSData(byte[], com.webobjects.foundation.NSRange);
  public com.webobjects.foundation.NSData(byte[], int, int);
  private void initFromBytes(byte[], com.webobjects.foundation.NSRange, boolean);
  public com.webobjects.foundation.NSData(byte[], com.webobjects.foundation.NSRange, boolean);
  public com.webobjects.foundation.NSData(com.webobjects.foundation.NSData);
  public com.webobjects.foundation.NSData(java.io.InputStream, int) throws java.io.IOException;
  protected void _createBytesFromInputStream(java.io.InputStream, int, boolean) throws java.io.IOException;
  public com.webobjects.foundation.NSData(java.io.File) throws java.io.IOException;
  public com.webobjects.foundation.NSData(java.net.URL) throws java.io.IOException;
  public com.webobjects.foundation.NSData(java.lang.String);
  public com.webobjects.foundation.NSData(java.lang.String, java.lang.String);
  protected byte[] bytesNoCopy();
  protected com.webobjects.foundation.NSRange rangeNoCopy();
  protected byte[] immutableBytes();
  protected com.webobjects.foundation.NSRange immutableRange();
  public byte[] bytesNoCopy(com.webobjects.foundation.NSMutableRange);
  public com.webobjects.foundation.NSData subdataWithRange(com.webobjects.foundation.NSRange);
  public static com.webobjects.foundation.NSData dataWithContentsOfMappedFile(java.io.File) throws java.io.IOException;
  public static com.webobjects.foundation.NSData dataWithContentsOfFile(java.io.File) throws java.io.IOException;
  public static com.webobjects.foundation.NSData dataWithContentsOfFile(java.lang.String) throws java.io.IOException;
  public int length();
  public int _offset();
  public byte[] _bytesNoCopy();
  private byte[] _bytes(int, int);
  public byte[] bytes();
  public byte[] bytes(int, int);
  public byte[] bytes(com.webobjects.foundation.NSRange);
  public boolean writeToURL(java.net.URL, boolean);
  public boolean writeToFile(java.lang.String);
  public boolean isEqualToData(com.webobjects.foundation.NSData);
  public boolean equals(java.lang.Object);
  public java.io.ByteArrayInputStream stream();
  public void writeToStream(java.io.OutputStream) throws java.io.IOException;
  public java.lang.Class classForCoder();
  public static java.lang.Object decodeObject(com.webobjects.foundation.NSCoder);
  public void encodeWithCoder(com.webobjects.foundation.NSCoder);
  public int hashCode();
  public java.lang.Object clone();
  public java.lang.String toString();
  public java.lang.String _hexString();
  protected boolean _mustRecomputeHash();
  protected void _setMustRecomputeHash(boolean);
  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  private java.lang.Object readResolve() throws java.io.ObjectStreamException;
  static {};
}
