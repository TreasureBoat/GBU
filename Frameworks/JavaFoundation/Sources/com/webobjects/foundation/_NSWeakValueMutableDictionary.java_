Compiled from "_NSWeakValueMutableDictionary.java"
public class com.webobjects.foundation._NSWeakValueMutableDictionary<K, V, R extends java.lang.ref.WeakReference<V>> extends com.webobjects.foundation._NSWeakMutableCollection<V, R> implements java.io.Serializable {
  public static final java.lang.Class _CLASS;
  static final long serialVersionUID;
  private static final java.lang.String SerializationKeysFieldKey;
  private static final java.lang.String SerializationValuesFieldKey;
  com.webobjects.foundation.NSMutableDictionary<K, R> dictionary;
  private static final java.io.ObjectStreamField[] serialPersistentFields;
  public com.webobjects.foundation._NSWeakValueMutableDictionary();
  public com.webobjects.foundation._NSWeakValueMutableDictionary(int);
  public com.webobjects.foundation.NSArray<K> allKeys();
  public com.webobjects.foundation.NSArray<V> allValues();
  public com.webobjects.foundation.NSArray<V> allObjects();
  public int count();
  public V[] objects();
  public java.util.Enumeration<K> keyEnumerator();
  public java.util.Enumeration<V> objectEnumerator();
  public java.util.Enumeration<R> referenceEnumerator();
  public void setObjectForKey(java.lang.Object, java.lang.Object);
  public java.lang.Object removeObjectForKey(java.lang.Object);
  public void removeAllObjects();
  public java.lang.Object objectForKey(java.lang.Object);
  public R referenceForKey(java.lang.Object);
  public void addObject(V);
  public void addReference(R);
  public void removeObject(java.lang.Object);
  public void removeReference(java.lang.Object);
  protected void __removeReference(java.lang.ref.Reference);
  public java.lang.String toString();
  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  static {};
}
