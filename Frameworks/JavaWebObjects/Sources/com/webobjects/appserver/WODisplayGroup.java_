Compiled from "WODisplayGroup.java"
public class com.webobjects.appserver.WODisplayGroup implements com.webobjects.foundation.NSKeyValueCoding,com.webobjects.foundation.NSKeyValueCoding$ErrorHandling,com.webobjects.foundation.NSDisposable,com.webobjects.eocontrol.EOKeyValueArchiving,com.webobjects.eocontrol.EOKeyValueArchiving$Awaking,java.io.Serializable {
  static final long serialVersionUID;
  int _numberOfObjectsPerBatch;
  int _batchIndex;
  public static final java.lang.String DisplayGroupWillFetchNotification;
  public static java.lang.String globalDefaultStringMatchOperator();
  public static void setGlobalDefaultStringMatchOperator(java.lang.String);
  public static java.lang.String globalDefaultStringMatchFormat();
  public static void setGlobalDefaultStringMatchFormat(java.lang.String);
  public static boolean globalDefaultForValidatesChangesImmediately();
  public static void setGlobalDefaultForValidatesChangesImmediately(boolean);
  protected void finishInitialization();
  public com.webobjects.appserver.WODisplayGroup();
  public void dispose();
  public java.lang.Object initWithCoder(com.webobjects.foundation.NSCoder);
  public void encodeWithCoder(com.webobjects.foundation.NSCoder);
  public boolean selectsFirstObjectAfterFetch();
  public void setSelectsFirstObjectAfterFetch(boolean);
  public void setValidatesChangesImmediately(boolean);
  public boolean validatesChangesImmediately();
  public void setFetchesOnLoad(boolean);
  public boolean fetchesOnLoad();
  public com.webobjects.foundation.NSArray allObjects();
  public com.webobjects.foundation.NSArray displayedObjects();
  public void setQualifier(com.webobjects.eocontrol.EOQualifier);
  public com.webobjects.eocontrol.EOQualifier qualifier();
  public void setSortOrderings(com.webobjects.foundation.NSArray<com.webobjects.eocontrol.EOSortOrdering>);
  public com.webobjects.foundation.NSArray<com.webobjects.eocontrol.EOSortOrdering> sortOrderings();
  public void updateDisplayedObjects();
  public void setObjectArray(com.webobjects.foundation.NSArray);
  public void setDataSource(com.webobjects.eocontrol.EODataSource);
  public com.webobjects.eocontrol.EODataSource dataSource();
  public void setDelegate(java.lang.Object);
  public java.lang.Object delegate();
  public com.webobjects.foundation.NSArray localKeys();
  public void setLocalKeys(com.webobjects.foundation.NSArray);
  public void objectsChangedInEditingContext(com.webobjects.foundation.NSNotification);
  public void objectsInvalidatedInEditingContext(com.webobjects.foundation.NSNotification);
  public com.webobjects.foundation.NSUndoManager undoManager();
  public void _beginObserverNotification(java.lang.Object);
  public void _lastObserverNotified(java.lang.Object);
  public com.webobjects.foundation.NSArray selectionIndexes();
  public com.webobjects.foundation.NSArray selectedObjects();
  public void setSelectedObjects(com.webobjects.foundation.NSArray);
  public java.lang.Object selectedObject();
  public void setSelectedObject(java.lang.Object);
  public boolean endEditing();
  public boolean setSelectionIndexes(com.webobjects.foundation.NSArray);
  public boolean selectObject(java.lang.Object);
  public boolean selectObjectsIdenticalTo(com.webobjects.foundation.NSArray);
  public boolean selectObjectsIdenticalToSelectFirstOnNoMatch(com.webobjects.foundation.NSArray, boolean);
  public java.lang.Object selectNext();
  public java.lang.Object selectPrevious();
  public boolean clearSelection();
  public void redisplay();
  public boolean _deleteObject(java.lang.Object);
  public boolean deleteSelection();
  public boolean deleteObjectAtIndex(int);
  public void setInsertedObjectDefaultValues(com.webobjects.foundation.NSDictionary);
  public com.webobjects.foundation.NSDictionary insertedObjectDefaultValues();
  public void _insertObjectAtIndex(java.lang.Object);
  public void insertObjectAtIndex(java.lang.Object, int);
  public java.lang.Object insertNewObjectAtIndex(int);
  public java.lang.Object fetch();
  public java.lang.String defaultStringMatchOperator();
  public void setDefaultStringMatchOperator(java.lang.String);
  public java.lang.String defaultStringMatchFormat();
  public void setDefaultStringMatchFormat(java.lang.String);
  public com.webobjects.eocontrol.EOQualifier qualifierFromQueryValues();
  public void qualifyDisplayGroup();
  public void qualifyDataSource();
  public void setInQueryMode(boolean);
  public boolean inQueryMode();
  public void encodeWithKeyValueArchiver(com.webobjects.eocontrol.EOKeyValueArchiver);
  public static java.lang.Object decodeWithKeyValueUnarchiver(com.webobjects.eocontrol.EOKeyValueUnarchiver);
  public void awakeFromKeyValueUnarchiver(com.webobjects.eocontrol.EOKeyValueUnarchiver);
  public com.webobjects.foundation.NSArray relationalQualifierOperators();
  public com.webobjects.foundation.NSArray allQualifierOperators();
  public com.webobjects.foundation.NSArray stringQualifierOperators();
  public void setNumberOfObjectsPerBatch(int);
  public int numberOfObjectsPerBatch();
  public java.lang.Object displayNextBatch();
  public java.lang.Object displayPreviousBatch();
  public int batchCount();
  public boolean hasMultipleBatches();
  public int currentBatchIndex();
  public void setCurrentBatchIndex(int);
  public int indexOfFirstDisplayedObject();
  public int indexOfLastDisplayedObject();
  public java.lang.Object displayBatchContainingSelectedObject();
  public com.webobjects.foundation.NSMutableDictionary queryMatch();
  public com.webobjects.foundation.NSMutableDictionary queryOperator();
  public com.webobjects.foundation.NSMutableDictionary queryMax();
  public com.webobjects.foundation.NSMutableDictionary queryMin();
  public com.webobjects.foundation.NSMutableDictionary queryBindings();
  public void editingContextPresentErrorMessage(com.webobjects.eocontrol.EOEditingContext, java.lang.String);
  public java.lang.Object insert();
  public java.lang.Object delete();
  public java.lang.String detailKey();
  public void setDetailKey(java.lang.String);
  public java.lang.Object masterObject();
  public void setMasterObject(java.lang.Object);
  public boolean hasDetailDataSource();
  public void willChange();
  public java.lang.Object valueForKey(java.lang.String);
  public void takeValueForKey(java.lang.Object, java.lang.String);
  public java.lang.Object handleQueryWithUnboundKey(java.lang.String);
  public void handleTakeValueForUnboundKey(java.lang.Object, java.lang.String);
  public void unableToSetNullForKey(java.lang.String);
  public java.lang.String toString();
  static {};
}
