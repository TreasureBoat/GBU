Compiled from "WOSession.java"
public class com.webobjects.appserver.WOSession implements java.lang.Cloneable,java.io.Serializable,com.webobjects.foundation.NSKeyValueCoding,com.webobjects.foundation.NSKeyValueCoding$ErrorHandling,com.webobjects.foundation.NSKeyValueCodingAdditions {
  static final long serialVersionUID;
  protected com.webobjects.foundation.NSMutableDictionary<java.lang.String, java.lang.Object> _componentState;
  public static final java.lang.String SessionDidTimeOutNotification;
  public static final java.lang.String SessionDidRestoreNotification;
  public static final java.lang.String SessionDidCreateNotification;
  protected transient java.lang.Object _httpSession;
  protected transient java.lang.Object _httpSessionWatcher;
  public com.webobjects.appserver.WOSession();
  public com.webobjects.appserver.WOSession(java.lang.String);
  public java.lang.Object clone();
  public java.lang.String toString();
  public java.lang.String sessionID();
  public void _setSessionID(java.lang.String);
  public void setDistributionEnabled(boolean);
  public boolean isDistributionEnabled();
  public void setStoresIDsInCookies(boolean);
  public boolean storesIDsInCookies();
  public com.webobjects.foundation.NSTimestamp expirationDateForIDCookies();
  public int timeOutForIDCookies();
  public void setStoresIDsInURLs(boolean);
  public boolean storesIDsInURLs();
  public java.lang.String domainForIDCookies();
  public void _setHttpSession(java.lang.Object);
  public void _setHttpSessionWatcher(java.lang.Object);
  public void _terminateByTimeout();
  public void _terminateByJ2EE();
  public void terminate();
  public boolean isTerminating();
  public void setTimeOut(double);
  public double timeOut();
  public long timeOutMillis();
  public void savePageInPermanentCache(com.webobjects.appserver.WOComponent);
  public com.webobjects.appserver.WOComponent restorePageForContextID(java.lang.String);
  protected com.webobjects.appserver.WOComponent getPageFromPageCacheForContextID(java.lang.String);
  protected com.webobjects.appserver.WOComponent getPageFromPageFragmentCacheForContextID(java.lang.String);
  public void _awakeInContext(com.webobjects.appserver.WOContext);
  public void _sleepInContext(com.webobjects.appserver.WOContext);
  public void _setContext(com.webobjects.appserver.WOContext);
  public int _contextCounter();
  protected void _contextDidIncrementContextID();
  public int _requestCounter();
  public void _saveCurrentPage();
  public void savePage(com.webobjects.appserver.WOComponent);
  protected void savePageInPageCache(com.webobjects.appserver.WOComponent);
  public java.lang.String _contextIDMatchingIDs(com.webobjects.appserver.WOContext);
  protected void savePageInPageFragmentCache(com.webobjects.appserver.WOComponent);
  public void setLanguages(com.webobjects.foundation.NSArray<java.lang.String>);
  public com.webobjects.foundation.NSArray<java.lang.String> languages();
  public void setObjectForKey(java.lang.Object, java.lang.String);
  public java.lang.Object objectForKey(java.lang.String);
  public java.util.Set<java.lang.String> keySet();
  public java.util.Enumeration<java.lang.String> keyEnumerator();
  public void removeObjectForKey(java.lang.String);
  public com.webobjects.appserver.WOContext context();
  public void awake();
  public void takeValuesFromRequest(com.webobjects.appserver.WORequest, com.webobjects.appserver.WOContext);
  public com.webobjects.appserver.WOActionResults invokeAction(com.webobjects.appserver.WORequest, com.webobjects.appserver.WOContext);
  public void appendToResponse(com.webobjects.appserver.WOResponse, com.webobjects.appserver.WOContext);
  public void sleep();
  public com.webobjects.foundation.NSArray statistics();
  protected com.webobjects.foundation.NSTimestamp _birthDate();
  protected long _lifeInMillis();
  protected java.lang.String _formattedStatistics();
  protected void _allowToViewStatistics();
  public boolean allowedToViewStatistics();
  public void validateStatisticsLogin(java.lang.String, java.lang.String);
  public void validationFailedWithException(java.lang.Throwable, java.lang.Object, java.lang.String, com.webobjects.appserver.WOComponent);
  protected void _allowToViewEvents();
  public boolean allowedToViewEvents();
  public void validateEventsLogin(java.lang.String, java.lang.String);
  public void _appendCookieToResponse(com.webobjects.appserver.WOResponse);
  public void _clearCookieFromResponse(com.webobjects.appserver.WOResponse);
  public static void logString(java.lang.String);
  public static void debugString(java.lang.String);
  public com.webobjects.eocontrol.EOEditingContext defaultEditingContext();
  public com.webobjects.eocontrol.EOEditingContext newDefaultEditingContext();
  public void setDefaultEditingContext(com.webobjects.eocontrol.EOEditingContext);
  public boolean lockDefaultEditingContext();
  public static boolean canAccessFieldsDirectly();
  public java.lang.Object valueForKey(java.lang.String);
  public void takeValueForKey(java.lang.Object, java.lang.String);
  public java.lang.Object handleQueryWithUnboundKey(java.lang.String);
  public void handleTakeValueForUnboundKey(java.lang.Object, java.lang.String);
  public void unableToSetNullForKey(java.lang.String);
  public java.lang.Object valueForKeyPath(java.lang.String);
  public void takeValueForKeyPath(java.lang.Object, java.lang.String);
  static {};
}
